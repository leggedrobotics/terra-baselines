train_config:
  train_type: "PPO"
  num_train_steps: 1000000000
  evaluate_every_epochs: 5000

  env_name: "Terra"
  env_kwargs: {}
  env_params: {}
  num_test_rollouts: 64
  # num_steps_test_rollouts: 600  # TODO make it work (tracer problem)

  use_action_masking: False
  mask_out_arm_extension: True

  fast_compile: True  # if True, uses jax.lax.scan to iterate over the minibatches
  num_train_envs: 2  # Number of parallel env workers
  epoch_ppo: 2  # "Number of PPO epochs on a single batch"
  n_steps: 3 # "GAE n-steps"
  n_minibatch: 1 # "Number of PPO minibatches" -> Note: compile time scales with it!
  lr_begin: 1e-04  # Start PPO learning rate
  lr_end: 1e-04 #  End PPO learning rate
  lr_warmup: 0.05 # Prop epochs until warmup is completed 
  max_grad_norm: 0.5  # Global norm to clip gradients by
  gamma: 0.995  # Discount factor
  clip_eps: 0.2 # "Clipping range"
  gae_lambda: 0.95 # "GAE lambda"
  entropy_coeff: 0.01 # "Entropy loss coefficient"
  critic_coeff: 0.5  # "Value loss coefficient"

  # Curriculum
  change_dof_threshold: 0.01  # value_losses_individual / targets_individual < change_dof_threshold

  # Reset manager
  activate_reset_manager: False
  context_length: 6  # store N steps in the past to evaluate if force reset

  network_name: "SimplifiedDecoupledCategoricalNet"

  n_evals_save: 9
  profile: False

log_config:
  time_to_track: ["num_steps"]
  what_to_track: ["return"]
  verbose: false
  print_every_k_updates: 1
  overwrite: 1
  model_type: "jax"
